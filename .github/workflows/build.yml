name: Build firmware

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.shield || 'default' }} - ${{ matrix.board }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        board:
          - nice_nano
        shield:
          - left
          - right

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache west modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/zephyr
            ~/.west
            modules
            zephyr
            tools
          key: ${{ runner.os }}-west-${{ hashFiles('west.yml') }}
          restore-keys: |
            ${{ runner.os }}-west-

      - name: Install west and dependencies
        run: |
          pip install west
          west init -l app
          west update
          west zephyr-export
          pip install -r zephyr/scripts/requirements.txt

      - name: Prepare variables
        id: variables
        run: |
          if [ -n "${{ matrix.shield }}" ]; then
            EXTRA_CMAKE_ARGS="-DSHIELD=${{ matrix.shield }}"
            ARTIFACT_NAME="${{ matrix.shield }}-${{ matrix.board }}-zmk"
            DISPLAY_NAME="${{ matrix.shield }} - ${{ matrix.board }}"
          else
            EXTRA_CMAKE_ARGS=
            DISPLAY_NAME="${{ matrix.board }}"
            ARTIFACT_NAME="${{ matrix.board }}-zmk"
          fi
          UNIQUE_SUFFIX=$(date +%s%N)
          echo "::set-output name=extra-cmake-args::${EXTRA_CMAKE_ARGS}"
          echo "::set-output name=artifact-name::${ARTIFACT_NAME}-${UNIQUE_SUFFIX}"
          echo "::set-output name=display-name::${DISPLAY_NAME}"

      - name: Build (${{ steps.variables.outputs.display-name }})
        run: |
          west build -s app -b ${{ matrix.board }} -- -DZMK_CONFIG=$(realpath config) ${{ steps.variables.outputs.extra-cmake-args }}
          mkdir -p build/artifacts
          cp build/zephyr/zmk.uf2 build/artifacts/${{ steps.variables.outputs.artifact-name }}.uf2
          cp build/zephyr/zmk.hex build/artifacts/${{ steps.variables.outputs.artifact-name }}.hex

      - name: Archive (${{ steps.variables.outputs.display-name }})
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.variables.outputs.artifact-name }}
          path: build/artifacts
